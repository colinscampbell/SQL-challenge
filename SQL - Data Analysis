

-- #### Data Analysis

-- Once you have a complete database, do the following:

-- 1. List the following details of each employee: employee number, last name, first name, sex, and salary.
select * from employees;
SELECT employees.emp_id,employees.last,employees.first,employees.sex, salaries.salary
FROM employees
INNER JOIN salaries on employees.emp_id = salaries.emp_id;

-- 2. List first name, last name, and hire date for employees who were hired in 1986.
SELECT first, last, hire_date
FROM employees
where extract(YEAR FROM hire_date) = 1986;

-- 3. List the manager of each department with the following information: department number, department name, the manager's employee number, last name, first name.
select departments.dept_id, departments.dept_name, dept_manager.emp_id as "Managers Employee Number", employees.last, employees.first
from departments
inner join dept_manager on dept_manager.dept_id = departments.dept_id
inner join employees on employees.emp_id = dept_manager.emp_id;


-- 4. List the department of each employee with the following information: employee number, last name, first name, and department name.
select employees.emp_id, employees.last, employees.first, departments.dept_name
from employees
inner join dept_emp on dept_emp.emp_id = employees.emp_id
inner join departments on departments.dept_id = dept_emp.dept_id;

-- 5. List first name, last name, and sex for employees whose first name is "Hercules" and last names begin with "B."
select first, last, sex
from employees
where first = 'Hercules' and last like 'B%'

-- 6. List all employees in the Sales department, including their employee number, last name, first name, and department name.
select employees.emp_id, employees.last, employees.first, departments.dept_name
from employees
inner join dept_emp on dept_emp.emp_id = employees.emp_id
inner join departments on departments.dept_id = dept_emp.dept_id
where departments.dept_name = 'Sales';

-- 7. List all employees in the Sales and Development departments, including their employee number, last name, first name, and department name.
select employees.emp_id, employees.last, employees.first, departments.dept_name
from employees
inner join dept_emp on dept_emp.emp_id = employees.emp_id
inner join departments on departments.dept_id = dept_emp.dept_id
where departments.dept_name = 'Sales' or departments.dept_name = 'Development';

-- 8. In descending order, list the frequency count of employee last names, i.e., how many employees share each last name.
select distinct last, count(emp_id) as frequency
from employees
group by last
order by frequency desc;

-- ## Bonus (Optional)

-- As you examine the data, you are overcome with a creeping suspicion that the dataset is fake. You surmise that your boss handed you spurious data in order to test the data engineering skills of a new employee. To confirm your hunch, you decide to take the following steps to generate a visualization of the data, with which you will confront your boss:

-- 1. Import the SQL database into Pandas. (Yes, you could read the CSVs directly in Pandas, but you are, after all, trying to prove your technical mettle.) This step may require some research. Feel free to use the code below to get started. Be sure to make any necessary modifications for your username, password, host, port, and database name:

--    ```sql
--    from sqlalchemy import create_engine
--    engine = create_engine('postgresql://localhost:5432/<your_db_name>')
--    connection = engine.connect()
--    ```

-- * Consult [SQLAlchemy documentation](https://docs.sqlalchemy.org/en/latest/core/engines.html#postgresql) for more information.

-- * If using a password, do not upload your password to your GitHub repository. See [https://www.youtube.com/watch?v=2uaTPmNvH0I](https://www.youtube.com/watch?v=2uaTPmNvH0I) and [https://help.github.com/en/github/using-git/ignoring-files](https://help.github.com/en/github/using-git/ignoring-files) for more information.

-- 2. Create a histogram to visualize the most common salary ranges for employees.

-- 3. Create a bar chart of average salary by title.

-- ## Epilogue

-- Evidence in hand, you march into your boss's office and present the visualization. With a sly grin, your boss thanks you for your work. On your way out of the office, you hear the words, "Search your ID number." You look down at your badge to see that your employee ID number is 499942.

-- ## Submission

-- * Create an image file of your ERD.

-- * Create a `.sql` file of your table schemata.

-- * Create a `.sql` file of your queries.

-- * (Optional) Create a Jupyter Notebook of the bonus analysis.

-- * Create and upload a repository with the above files to GitHub and post a link on BootCamp Spot.

-- * Ensure your repository has regular commits and a thorough README.md file

-- ## Rubric

-- [Unit 9 Rubric - SQL Homework - Employee Database: A Mystery in Two Parts](https://docs.google.com/document/d/1OksnTYNCT0v0E-VkhIMJ9-iG0_oXNwCZAJlKV0aVMKQ/edit?usp=sharing)

-- - - -

-- ## References

-- Mockaroo, LLC. (2021). Realistic Data Generator. [https://www.mockaroo.com/](https://www.mockaroo.com/)

-- - - -

-- Â© 2021 Trilogy Education Services, LLC, a 2U, Inc. brand. Confidential and Proprietary. All Rights Reserved.
